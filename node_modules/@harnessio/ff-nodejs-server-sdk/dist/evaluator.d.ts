import { Query, Target } from './types';
import { FeatureConfig, Variation } from './openapi';
import { ConsoleLog } from './log';
declare type Callback = (fc: FeatureConfig, target: Target, variation: Variation) => void;
export declare class Evaluator {
    private query;
    private log;
    constructor(query: Query, logger: ConsoleLog);
    private getAttrValue;
    private findVariation;
    private getNormalizedNumberWithNormalizer;
    private getNormalizedNumber;
    private isEnabled;
    private evaluateDistribution;
    private isTargetIncludedOrExcludedInSegment;
    private evaluateClause;
    private evaluateClauses;
    private evaluateRule;
    private evaluateRules;
    private evaluateVariationMap;
    private evaluateFlag;
    private checkPreRequisite;
    private evaluate;
    boolVariation(identifier: string, target: Target, defaultValue?: boolean, callback?: Callback): Promise<boolean>;
    stringVariation(identifier: string, target: Target, defaultValue?: string, callback?: Callback): Promise<string>;
    numberVariation(identifier: string, target: Target, defaultValue?: number, callback?: Callback): Promise<number>;
    jsonVariation(identifier: string, target: Target, defaultValue?: {}, callback?: Callback): Promise<Record<string, unknown>>;
}
export {};
